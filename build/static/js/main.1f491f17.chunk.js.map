{"version":3,"sources":["comp/LoginPage.js","comp/Chat/Message.js","comp/Chat/Chat.js","comp/Main.js","App.js","index.js"],"names":["LoginPage","className","href","src","alt","Message","name","date","message","userImage","userType","messageRef","useRef","useEffect","current","scrollIntoView","behavior","ref","title","moment","format","Chat","useContext","DataContext","socket","userInfo","image","useState","text","setText","emit","on","docs","setMessages","console","log","prev","removeAllListeners","handleSendMessage","e","preventDefault","String","messages","createMessages","map","index","type","value","onChange","target","onClick","style","display","Main","React","createContext","io","App","setUserInfo","fetch","credentials","then","res","json","profile","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f491f17.chunk.js","sourcesContent":["import \"./LoginPage.css\"\r\nconst LoginPage = () => {\r\n    return ( \r\n        <div className=\"loginContainer\">\r\n        <h1>Warsaw Night Racing</h1>\r\n      <a href={`/auth/google`}>\r\n        <div className=\"loginGoogle\">\r\n\r\n          <img\r\n            src=\"https://admonkey.pl/wp-content/uploads/2016/12/google-logo-png.png\"\r\n            alt=\"\"\r\n          />\r\n          Login with Google\r\n        </div>\r\n      </a>\r\n\r\n      </div>\r\n\r\n     );\r\n}\r\n \r\nexport default LoginPage;","import { useRef, useEffect, useContext } from \"react\";\r\nimport \"./Message.css\";\r\nimport { DataContext } from \"../../App\";\r\n\r\nconst Message = ({ name, date, message, userType, userImage }) => {\r\n  const messageRef = useRef(null);\r\n\r\n  //   const { userInfo } = useContext(DataContext);\r\n  useEffect(() => {\r\n    messageRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  }, []);\r\n\r\n  //   const myMessageStyle = () => {\r\n  //     if (myID === name) {\r\n  //       return {\r\n  //         alignSelf: \"flex-end\",\r\n  //         marginRight: \"2px\",\r\n  //         borderRadius: \"5px 5px 0 5px\",\r\n  //       };\r\n  //     } else {\r\n  //       return false;\r\n  //     }\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"message\"\r\n        ref={messageRef}\r\n        title={date}\r\n        // style={myMessageStyle}\r\n      >\r\n        <img src={userImage} alt=\"user\" />\r\n        <div className=\"messageContent\">\r\n          <span className=\"userName\">{name} : </span>\r\n          <span className=\"text\">{message}</span>\r\n        </div>\r\n        {/* <span className=\"date\">{date}</span> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import Message from \"./Message\";\r\nimport \"./Chat.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { DataContext } from \"../../App\";\r\nimport moment from \"moment\";\r\n\r\nmoment().format(\"HH:mm:ss\");\r\n\r\nconst Chat = () => {\r\n  const { socket, userInfo } = useContext(DataContext);\r\n  const { name, userType, image } = userInfo;\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"getMessages\");\r\n    socket.on(\"getMessagesAnswer\", ({ docs }) => {\r\n      setMessages(docs);\r\n    });\r\n    socket.on(\"newMessageAnswer\", ({ docs }) => {\r\n      console.log(docs);\r\n      setMessages((prev) => [...prev, docs]);\r\n    });\r\n    return () => {\r\n      socket.removeAllListeners(\"getMessagesAnswer\");\r\n      socket.removeAllListeners(\"newMessageAnswer\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    const date = String(moment().format(\"HH:mm:ss\"));\r\n    // console.log(date);\r\n    socket.emit(\"sendMessage\", { text, name, userType, date, image });\r\n    setText(\"\");\r\n  };\r\n\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const createMessages = messages.map(\r\n    ({ name, message, date, userType, userImage }, index) => {\r\n      return (\r\n        <Message\r\n          key={index}\r\n          name={name}\r\n          message={message}\r\n          date={date}\r\n          userType={userType}\r\n          userImage={userImage}\r\n        />\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chatContainer\">{createMessages}</div>\r\n      <div className=\"inputContainer\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleSendMessage}\r\n            style={{ display: \"none\" }}\r\n          ></button>\r\n        </form>\r\n\r\n        <div className=\"sendMessageButton\" onClick={handleSendMessage}>\r\n          <SendIcon />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import Chat from \"./Chat/Chat\";\r\nimport \"./Main.css\";\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport LoginPage from \"./comp/LoginPage\";\r\nimport Main from \"./comp/Main\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport const DataContext = React.createContext(null);\r\n\r\nconst socket = io(\"/\");\r\n\r\nconst App = () => {\r\n  // const [userInfo, setUserInfo] = useState({\r\n  //   id: \"60364824ced6885b5c790991\",\r\n  //   name: \"Victorowsky\",\r\n  //   image:\r\n  //     \"https://lh3.googleusercontent.com/a-/AOh14GiwkoB8yrjJrfotKxCu4P7W8IlUz9OicoSbU6HO=s96-c\",\r\n  // });\r\n  const [userInfo, setUserInfo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/getProfile\", { credentials: \"include\" })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.profile) {\r\n          console.log(res.profile);\r\n          setUserInfo(res.profile);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <DataContext.Provider value={{ userInfo, socket }}>\r\n        {userInfo ? <Main /> : <LoginPage />}\r\n      </DataContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}