{"version":3,"sources":["comp/LoginPage.js","comp/Chat/Message.js","comp/Chat/Chat.js","comp/Event/Event.js","comp/Main.js","App.js","index.js"],"names":["LoginPage","className","href","src","alt","Message","name","date","message","userType","userImage","wroteBy","messageRef","useRef","userInfo","useContext","DataContext","useEffect","current","scrollIntoView","behavior","dateRef","isAdmin","onClick","classList","toggle","ref","style","_id","alignSelf","marginRight","borderRadius","title","color","fontWeight","moment","format","Chat","socket","image","useState","text","setText","emit","on","docs","setMessages","prev","removeAllListeners","handleSendMessage","e","preventDefault","String","messages","createMessages","map","index","type","value","onChange","target","display","Event","Main","React","createContext","io","App","id","setUserInfo","fetch","credentials","then","res","json","profile","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dc823ec.chunk.js","sourcesContent":["import \"./LoginPage.css\"\r\nconst LoginPage = () => {\r\n    return ( \r\n        <div className=\"loginContainer\">\r\n        <h1>Warsaw Night Racing</h1>\r\n      <a href={`/auth/google`}>\r\n        <div className=\"loginGoogle\">\r\n\r\n          <img\r\n            src=\"https://admonkey.pl/wp-content/uploads/2016/12/google-logo-png.png\"\r\n            alt=\"\"\r\n          />\r\n          Login with Google\r\n        </div>\r\n      </a>\r\n\r\n      </div>\r\n\r\n     );\r\n}\r\n \r\nexport default LoginPage;","import { useRef, useEffect, useContext } from \"react\";\r\nimport \"./Message.css\";\r\nimport { DataContext } from \"../../App\";\r\n\r\nconst Message = ({ name, date, message, userType, userImage, wroteBy }) => {\r\n  const messageRef = useRef(null);\r\n\r\n  const { userInfo } = useContext(DataContext);\r\n\r\n  useEffect(() => {\r\n    messageRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  }, []);\r\n  const dateRef = useRef(null);\r\n\r\n  const handleShowDate = () => {\r\n    dateRef.current.classList.toggle(\"dateShown\");\r\n  };\r\n  const isAdmin = userType === \"admin\";\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={handleShowDate}\r\n        className=\"message\"\r\n        ref={messageRef}\r\n        style={\r\n          userInfo._id === wroteBy\r\n            ? {\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"2px\",\r\n                borderRadius: \"5px 5px 0 5px\",\r\n              }\r\n            : {}\r\n        }\r\n        title={date}\r\n      >\r\n        <img src={userImage} alt=\"user\" />\r\n        <div className=\"messageContent\">\r\n          <span\r\n            style={isAdmin ? { color: \"red\", fontWeight: 500 } : {}}\r\n            className=\"userName\"\r\n          >\r\n            {name}\r\n          </span>\r\n          :<span className=\"text\"> {message}</span>\r\n        </div>\r\n        <span ref={dateRef} className=\"date\">\r\n          {date}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import Message from \"./Message\";\r\nimport \"./Chat.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { DataContext } from \"../../App\";\r\nimport moment from \"moment\";\r\n\r\nmoment().format(\"HH:mm:ss\");\r\n\r\nconst Chat = () => {\r\n  const { socket, userInfo } = useContext(DataContext);\r\n  const { name, userType, image, _id } = userInfo;\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"getMessages\");\r\n    socket.on(\"getMessagesAnswer\", ({ docs }) => {\r\n      setMessages(docs);\r\n    });\r\n    socket.on(\"newMessageAnswer\", ({ docs }) => {\r\n      setMessages((prev) => [...prev, docs]);\r\n    });\r\n    return () => {\r\n      socket.removeAllListeners(\"getMessagesAnswer\");\r\n      socket.removeAllListeners(\"newMessageAnswer\");\r\n    };\r\n  }, [socket]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    const date = String(moment().format(\"HH:mm:ss\"));\r\n    // console.log(date);\r\n    socket.emit(\"sendMessage\", { text, name, userType, date, image, _id });\r\n    setText(\"\");\r\n  };\r\n\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const createMessages = messages.map(\r\n    ({ name, message, date, userType, userImage, wroteBy }, index) => {\r\n      return (\r\n        <Message\r\n          key={index}\r\n          wroteBy={wroteBy}\r\n          name={name}\r\n          message={message}\r\n          date={date}\r\n          userType={userType}\r\n          userImage={userImage}\r\n        />\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chatContainer\">{createMessages}</div>\r\n      <div className=\"inputContainer\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleSendMessage}\r\n            style={{ display: \"none\" }}\r\n          ></button>\r\n        </form>\r\n\r\n        <div className=\"sendMessageButton\" onClick={handleSendMessage}>\r\n          <SendIcon />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import \"./Event.css\"\r\nconst Event = () => {\r\n    return ( \r\n        <div className=\"event\">\r\n            <h2>Current event:</h2>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Event;","import Chat from \"./Chat/Chat\";\r\nimport Event from \"./Event/Event\";\r\nimport \"./Main.css\";\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <Event />\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport LoginPage from \"./comp/LoginPage\";\r\nimport Main from \"./comp/Main\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport const DataContext = React.createContext(null);\r\n\r\nconst socket = io(\"/\");\r\n\r\nconst App = () => {\r\n  const [userInfo, setUserInfo] = useState({\r\n    id: \"60364824ced6885b5c790991\",\r\n    name: \"Victorowsky\",\r\n    image:\r\n      \"https://lh3.googleusercontent.com/a-/AOh14GiwkoB8yrjJrfotKxCu4P7W8IlUz9OicoSbU6HO=s96-c\",\r\n  });\r\n  // const [userInfo, setUserInfo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/getProfile\", { credentials: \"include\" })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.profile) {\r\n          setUserInfo(res.profile);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <DataContext.Provider value={{ userInfo, socket }}>\r\n        {userInfo ? <Main /> : <LoginPage />}\r\n      </DataContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}